model:
  name: "resnet50"  # Options: resnet50, alexnet, vgg16, custom, etc.
  source: "torchvision"  # Options: torchvision, custom
  num_classes: 10
  # Additional model-specific parameters
  load_checkpoint: false
  pretrained: true # Only works if possible and if load_checkpoint is set to false
  
data:
  dataset:
    name: "cifar10"  # Name of the dataset class to use
    train_val_dataset: "CIFAR10Dataset"  # Class name from datasets.py
    test_dataset: "CIFAR10Dataset"  # Class name from datasets.py
    params:  # Parameters passed to the dataset class
      data_path: "/home/carlangas/Documents/Master/CV/Final_project/data/raw/CIFAR10/cifar-10-batches-py"
    transforms:
      train:
      - name: "RandomCrop"
        params:
          size: 32
          padding: 4
      - name: "RandomHorizontalFlip"
      - name: "ToTensor"
      - name: "Normalize"
        params:
          mean: [0.4914, 0.4822, 0.4465]
          std: [0.2023, 0.1994, 0.2010]
      val_test:
      - name: "ToTensor"
      - name: "Normalize"
        params:
          mean: [0.4914, 0.4822, 0.4465]
          std: [0.2023, 0.1994, 0.2010]
  
  datamodule:
    batch_size: 32
    num_workers: 4
    split_ratio: 0.9
    
lit_model:
  lr: 0.001
  weight_decay: 0.0001

training:
  max_epochs: 5
  early_stopping_patience: 8
  debug: false  # If true, will use limited batches
  evaluate: true  # Run evaluation after training

paths:
  model_dir: "results/exp1/model"
  checkpoint_dir: "results/exp1/checkpoints"
  log_dir: "results/exp1/logs"

trainer:
  accelerator: "gpu"
  devices: 1
  deterministic: true
  enable_progress_bar: true
